PROJECT(OpenSSL_Test)
CMAKE_MINIMUM_REQUIRED(VERSION 3.0)

SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=c17")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17")

SET(CMAKE_BUILD_TYPE "Release")
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -O2")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -O2")

ADD_DEFINITIONS(-D_DEFAULT_SOURCE=1) # fix bss_dgram.c: error: 'const struct in6_addr' has no member named 's6_addr32'

MESSAGE(STATUS "cmake current source dir: ${CMAKE_CURRENT_SOURCE_DIR}")
SET(PATH_TEST_FILES ${CMAKE_CURRENT_SOURCE_DIR}/./../../demo/OpenSSL_Test)
SET(PATH_SRC_OPENSSL_FILES ${CMAKE_CURRENT_SOURCE_DIR}/./../../src/openssl/build/install/include)
SET(PATH_SRC_B64_FILES ${CMAKE_CURRENT_SOURCE_DIR}/./../../src)
SET(PATH_SRC_CPPCODEC_FILES ${CMAKE_CURRENT_SOURCE_DIR}/./../../src/cppcodec)
SET(PATH_SRC_CURL_FILES ${CMAKE_CURRENT_SOURCE_DIR}/./../../src/curl)
SET(PATH_SRC_HTTP_PARSER_FILES ${CMAKE_CURRENT_SOURCE_DIR}/./../../src)
SET(PATH_SRC_BEARSSL_FILES ${CMAKE_CURRENT_SOURCE_DIR}/./../../src/bearssl)
SET(PATH_SRC_BASE64URL_FILES ${CMAKE_CURRENT_SOURCE_DIR}/./../../src/base64url)
SET(PATH_SRC_SOCKPP_FILES ${CMAKE_CURRENT_SOURCE_DIR}/./../../src/sockpp)
MESSAGE(STATUS "path test files: ${PATH_TEST_FILES}")


# head file search path
INCLUDE_DIRECTORIES(
	${PATH_TEST_FILES}
	${PATH_OPENCV}/include
	${PATH_SRC_OPENSSL_FILES}
	${PATH_SRC_B64_FILES}
	${PATH_SRC_CPPCODEC_FILES}
	${PATH_SRC_HPPT_PARSER_FILES}
	${PATH_SRC_CURL_FILES}/include
	${PATH_SRC_CURL_FILES}/build
	${PATH_SRC_BEARSSL_FILES}/inc
	${PATH_SRC_BASE64URL_FILES}
	${PATH_SRC_SOCKPP_FILES}/install/release/include

)

FIND_PACKAGE(OpenCV)

LINK_DIRECTORIES(
	${CMAKE_CURRENT_SOURCE_DIR}/build
	${OpenCV_LIB_DIR}
)

# recursive query match files :*.cpp, *.cc, *.c
FILE(GLOB_RECURSE TEST_CPP_LIST ${PATH_TEST_FILES}/*.cpp)
FILE(GLOB_RECURSE TEST_CC_LIST ${PATH_TEST_FILES}/*.cc)
SET(SRC_C_LIST )
LIST(APPEND SRC_C_LIST ${PATH_SRC_B64_FILES}/b64/decode.c)
LIST(APPEND SRC_C_LIST ${PATH_SRC_B64_FILES}/b64/encode.c)
LIST(APPEND SRC_C_LIST ${PATH_SRC_HTTP_PARSER_FILES}/http-parser/http_parser.c)
LIST(APPEND SRC_C_LIST ${PATH_SRC_BASE64URL_FILES}/base64url.cpp)
MESSAGE(STATUS "test cpp list: ${TEST_CPP_LIST} ${TEST_C_LIST} ${SRC_C_LIST}")

# build executable program
ADD_EXECUTABLE(OpenSSL_Test ${TEST_CPP_LIST} ${TEST_CC_LIST} ${SRC_C_LIST})
# add dependent library: static and dynamic
TARGET_LINK_LIBRARIES(OpenSSL_Test
	crypto
	ssl
	curl
	bearssl
	${OpenCV_LIBS}
	sockpp
	pthread
)

